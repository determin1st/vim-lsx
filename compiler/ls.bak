" Language:    LiveScript
" Maintainer:  George Zahariev
" Maintainer:  Michael Quad
" URL:         http://github.com/gkz/vim-ls
" URL:         http://github.com/determin1st/vim-lsx
" License:     WTFPL


" default check
if exists('current_compiler')
  finish
endif
let current_compiler = 'ls'
" set global defaults
if !exists('livescript_compiler')
  let livescript_compiler = 'lsc'
  let livescript_make_options = '-b'
endif
if !exists('livescript_extra_compiler')
  let livescript_extra_compiler = ''
endif
" create helpers
function! s:GetMakePrg()
  " check for extra compiler and
  " compose compilation command
  if strlen(g:livescript_extra_compiler) && expand('%:e') ==# 'lsx'
    return g:livescript_compiler . ' -p '
    \      . g:livescript_make_options . ' $* '
    \      . fnameescape(expand('%')) . ' | '
    \      . g:livescript_extra_compiler
  else
    return g:livescript_compiler . ' -c '
    \      . g:livescript_make_options . ' $* '
    \      . fnameescape(expand('%'))
  endif
endfunction
function! s:SetMakePrg()
  " check scoped variable is livescript specific and
  " set the makeprg
  if &l:makeprg =~ '^ls'
    let &l:makeprg = s:GetMakePrg()
  elseif &g:makeprg =~ '^ls'
    let &g:makeprg = s:GetMakePrg()
  else
    " another compiler is used,
    " fail
    return 0
  endif
  " success
  return 1
endfunction
function! s:UpdateMakePrg()
  " set `makeprg` and
  " check if livescript is still the compiler
  if !s:SetMakePrg()
    " cleanup autocommands
    autocmd! LiveScriptUpdateMakePrg
  endif
endfunction
" initialize
" set a dummy compiler (temporarily)
CompilerSet makeprg=ls
" now, according to the dummy variable scope,
" set it locally or globally
call s:SetMakePrg()
" set error format
CompilerSet errorformat=%EFailed\ at:\ %f,
                       \%ECan't\ find:\ %f,
                       \%CSyntaxError:\ %m\ on\ line\ %l,
                       \%CError:\ Parse\ error\ on\ line\ %l:\ %m,
                       \%C,%C\ %.%#
" define generic make command alias
command! -bang -bar -nargs=* LiveScriptMake make<bang> <args>
" define the autocommand group
" set `makeprg` on rename since we embed the filename in the setting.
augroup LiveScriptUpdateMakePrg
  " cleanup (prevents autocommands defined twice)
  autocmd!
  " Buffer-local autocommands are attached to a specific buffer. They are useful
  " if the buffer does not have a name and when the name does not match a specific
  " pattern. But it also means they must be explicitly added to each buffer.
  " set autocmd locally if compiler was set locally.
  if &l:makeprg =~ '^ls'
    autocmd BufFilePost,BufWritePost <buffer> call s:UpdateMakePrg()
  else
    autocmd BufFilePost,BufWritePost call s:UpdateMakePrg()
  endif
augroup END

" editor settings
" vim: fdm=marker ts=2 sw=2 sts=2 nu:
